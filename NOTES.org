
* PROJECT Petnames
:PROPERTIES:
:ID:       e5b0c0f1-7ebc-4e8c-9712-cd2cd4a055ce
:END:
:LOGBOOK:
- State "PROJECT"    from              [2023-03-23 Thu 17:59]
:END:

** Design
:PROPERTIES:
:ID:       a7d0005c-a219-4cae-a32f-6bf7b2e7a8fb
:END:

+ [ ] Add appropriate sections of these design notes to the project docs.

+ Terminology
  + Nickname :: What we have been calling "public names" (the string loaded from the ~/.well-known/host-meta~ file) is now going to be called the "nickname."
  + Petname :: given by each local user to one and only one hyperdrive.
  + Public key :: the public key address of the hyperdrive.
  + Seed :: the value from which the public key is generated by hyper-gateway.
  + Domains :: One or more DNS names that are configured with DNSLink records to point to a hyperdrive.

+ Internals
  + [X] Add a ~petname~ field to the ~hyperdrive~ struct.
  + [X] Add /petnames/ support to ~hyperdrive--format-host~.
  + [X] Add petname to ~hyperdrive-default-host-format~.
  + [X] Add petname face.
  + [X] Add faces for all types of hostname formats.
  + [X] Change ~public-name~ to ~nickname~ everywhere.
  + [X] Consider adding ~:with-label t~ to everywhere ~hyperdrive--format-host~ is called.
  + [X] Add a command to set a petname.

+ UI
  + The user must be able to clearly distinguish between petnames, nicknames, and public keys.  Each type should be visually distinctive and umambiguous.

  + [X] Empty string as a petname should be treated as an unset petname.
  + [ ] Have an option to automatically prompt the user to set a petname for newly visited hyperdrives.

  + Considerations
    + Privacy :: If /petnames/ leak (e.g. when sharing links, or in a file in ~/.emacs.d that gets committed to git and published to a public repo), it could reveal personal information (like what someone thinks of another person).
      + Is this a problem?  Is it okay for them to "leak"?  Should they even be considered private?

  + Where the /petname/ should be displayed:
    + [X] Directory header
    + [X] Buffer name
    + [X] describe-hyperdrive buffer
    + [ ] Hyperdrive completion
    + [ ] When naming a link
    + [ ] When naming a bookmark

  + Flows:

    + Creating a new hyperdrive ::
      1. Prompt the user for the /seed/.
      2. Prompt the user for the /petname/, using the /seed/ as the default value.
      3. Show the new hyperdrive's directory buffer.

    + Assigning petnames to existing hyperdrives ::
      1. Call a command to set the petname of a hyperdrive (defaulting to the one relating to the current buffer).
      2. Enter the new petname.
      3. Verify that it the petname isn't already assigned to another hyperdrive.
      4. Set the new petname in the struct.
      5. Persist the struct?

    + Removing petnames from hyperdrives ::
      1. Document that setting a petname to the empty string is considered unsetting the petname.

* Response matrix
:PROPERTIES:
:ID:       3381f0a8-7d75-4e1e-90e4-f4d9adf6015e
:END:

Currently observed behavior.

| Request for                                           | Returns         | # |
|-------------------------------------------------------+-----------------+---|
| URL to valid hyperdrive without content               | Etag == 1       |   |
| URL to unknown (i.e. network-inaccessible) hyperdrive | Etag == 1       | ! |
| URL to valid hyperdrive that has ever had content     | Etag > 1        |   |
| URL to valid hyperdrive directory but invalid file    | HTTP 404        |   |
| URL with too-short public key                         | HTTP 500        |   |

** Ideals?
:PROPERTIES:
:ID:       3f2fa76c-0a35-4b5f-bc8e-91a2d55c6db2
:END:

What we'd ideally like the behavior to be.

| Request for                           | HTTP            | Etag |
|---------------------------------------+-----------------+------|
| Obviously malformed URLs              | 400 Bad Request | N/A  |
| [[id:5951fa2d-6f95-41e0-9fd0-066ae06dbc3e][Unknown hyperdrive]]                    | 404 Not Found   | N/A  |
| [[id:aeb2dcd3-ec0f-42a6-aec2-9a7ba6eb163f][Known hyperdrive (never had content)]]  | 204 No Content  | N/A  |
| Known hyperdrive (has or had content) | 200 OK          | >= 1 |

To distinguish whether peers are available, ideally we would use another header, something like ~X-Hyperdrive-Peers~.

** Glossary

*** Unknown hyperdrive
:PROPERTIES:
:ID:       5951fa2d-6f95-41e0-9fd0-066ae06dbc3e
:END:

An unknown hyperdrive may or may not exist.  We don't know whether it does.  We have never received any information about it.

*** Known hyperdrive (never had content)
:PROPERTIES:
:ID:       aeb2dcd3-ec0f-42a6-aec2-9a7ba6eb163f
:END:

A hyperdrive that we know exists, and we know it is empty, and it has never yet had any content.  Possibly created by us.

* File interaction matrix

What Emacs does:

| Buffer backed by | Command      | buffer-file-name                        | buffer-name             |
|------------------+--------------+-----------------------------------------+-------------------------|
| nothing          | write-buffer | prompts for and changes to new filename | changes to new basename |
| nothing          | save-buffer  | prompts for and changes to new filename | changes to new basename |
| file on disk     | write-buffer | prompts for and changes to new filename | changes to new basename |
| file on disk     | save-buffer  | does not change                         | does not change         |

What hyperdrive does:

| Buffer backed by             | Command                 | Correct behavior? |
|------------------------------+-------------------------+-------------------|
| nothing                      | hyperdrive-write-buffer | yes               |
| nothing                      | hyperdrive-save-buffer  | yes               |
| file on disk                 | hyperdrive-write-buffer | yes               |
| file on disk                 | hyperdrive-save-buffer  | yes               |
| file on writable hyperdrive  | hyperdrive-write-buffer | yes               |
| file on writable hyperdrive  | hyperdrive-save-buffer  | yes               |
| file on read-only hyperdrive | hyperdrive-save-buffer  | yes               |
| file on read-only hyperdrive | hyperdrive-write-buffer | yes               |

** Overwriting existing Hyperdrive files

| Hyperdrive URL status | Command      | Should                      | Correct behavior? |
|-----------------------+--------------+-----------------------------+-------------------|
| Already exists        | write-buffer | Prompt to overwrite         |                   |
| Already exists        | save-buffer  | Overwrite without prompting |                   |

* DONE Conference presentation
:LOGBOOK:
- State "DONE"       from "PROJECT"    [2023-04-04 Tue 13:33] \\
  GREAT SUCCESS!
:END:

** DONE Screencast
DEADLINE: <2023-03-09 Thu>
:LOGBOOK:
- State "DONE"       from "PROJECT"    [2023-04-04 Tue 13:33]
- State "PROJECT"    from              [2023-02-28 Tue 18:13]
:END:

*** Issues to solve before screencast

+ [X] [[https://todo.sr.ht/~ushin/ushin/21][~ushin/ushin#21: Store link with search options in `hyperdrive-store-link` — sourcehut todo]]
+ [X] [[https://todo.sr.ht/~ushin/ushin/17][~ushin/ushin#17: Handle uri-encoding — sourcehut todo]] (maybe not absolutely necessary for screencast)

